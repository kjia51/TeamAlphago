<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alpha.mapper.LearnerMapper">

<!-- 그룹 가입 신청 조회 -->
<select id="searchJoinGrp" resultType="int">
	select count(*) from learner
	where l_m_id = #{l_m_id}
</select>

<!-- 그룹 이름  -->
<select id="groupName" resultType="com.alpha.vo.LearnerVO">
	select * from grp 
</select>

<!-- 학습지도자 별 그룹 이름  -->
<select id="groupNameForT" resultType="com.alpha.vo.LearnerVO">
  	select 
  		g_no,
  		g_name
  	from 
  		grp g
    left join member m on (g.t_m_id = m.m_id)
    where
		m_id = #{t_m_id}
</select>

<!-- 그룹별 가입 그룹 리스트 -->
<select id="groupInfo" resultType="com.alpha.vo.LearnerVO">
	SELECT
		g_cnt,
		g_name,
		sub_able,
		s.t_m_id AS t_m_id,
		sub_c_no AS l_c_no,
		g_no AS l_g_no,   
	    m_name AS t_m_name,
	    CONCAT(IFNULL(DATE_FORMAT(g.g_start, '%y.%m.%d'), ''), ' ~ ', IFNULL(DATE_FORMAT(g.g_end, '%y.%m.%d'), '')) AS g_period,
	    CONCAT(IFNULL(CONVERT(g.g_cnt, CHAR), ''), ' / ', IFNULL(CONVERT(s.sub_able, CHAR), '')) AS g_AppCnt,
	    (SELECT count(*) FROM learner l
		WHERE l_m_id = #{l_m_id} and  l_g_no = g_no) dupGrpCount
	FROM                
	    subscribe s
	LEFT JOIN 
	    member m ON (s.t_m_id = m.m_id)
	LEFT JOIN 
	    grp g ON (s.sub_no = g.sub_no)
	WHERE 
	    g_name = #{g_name}
	ORDER BY g_period asc     
</select>


<!-- 전체 그룹 가입 리스트 -->
<select id="grouplistAll" resultType="com.alpha.vo.LearnerVO">
	SELECT
		g_cnt,
		g_name,
		sub_able,
		s.t_m_id AS t_m_id,
		sub_c_no AS l_c_no,
		g_no AS l_g_no, 
	    m_name AS t_m_name,
	    CONCAT(IFNULL(DATE_FORMAT(g.g_start, '%y-%m-%d'), ''), ' ~ ', IFNULL(DATE_FORMAT(g.g_end, '%y-%m-%d'), '')) AS g_period,
	    CONCAT(IFNULL(CONVERT(g.g_cnt, CHAR), ''), ' / ', IFNULL(CONVERT(s.sub_able, CHAR), '')) AS g_AppCnt,
	   (SELECT count(*) FROM learner l
		WHERE l_m_id = #{l_m_id} and  l_g_no = g_no) dupGrpCount
	FROM                
	    subscribe s
	LEFT JOIN member m ON (s.t_m_id = m.m_id)
	LEFT JOIN grp g ON (s.sub_no = g.sub_no)
	WHERE g.g_name is not null
	ORDER BY 
		g_period asc
	LIMIT #{cri.startNo}, #{cri.amount}	
</select>

<!-- 전체 그룹 총 갯수 -->
<select id="grpTotalCnt" resultType="int">
    SELECT 
    	count(*) 
	FROM                
	    subscribe s
	LEFT JOIN 
	    member m ON (s.t_m_id = m.m_id)
	LEFT JOIN 
	    grp g ON (s.sub_no = g.sub_no)
	WHERE g.g_name is not null    
</select>

<!-- 그룹 가입 신청  -->
<insert id="insertGrp">
	INSERT INTO 
		learner (l_no ,t_m_id, l_m_id, l_c_no, l_g_no, l_register, l_checkyn)
	values 
		(#{l_no},#{t_m_id}, #{l_m_id}, #{l_c_no}, #{l_g_no}, now(), 'N')
</insert>

<!-- 그룹별 학습자 리스트 조회 (숙제 요청) -->
<select id= "grpLearnerList" resultType="com.alpha.vo.LearnerVO">
    select 
		c_no AS h_c_no,
    	m_id AS l_m_id,  
    	g_no AS h_g_no, 
    	l_no,
		m_name,
        c_name,
        DATE_FORMAT(g_start, '%Y-%m-%d') AS g_start,
        DATE_FORMAT(g_end, '%Y-%m-%d') AS g_end
    from 
    	learner 
    left join member on(l_m_id = m_id)
    left join grp on(l_g_no = g_no)
    left join content on(l_c_no = c_no)
    where 
    	l_g_no = #{g_no} and l_checkyn = 'Y'
</select>

<!-- 숙제 요청 내역 저장 -->
<insert id="insertHomework">
	insert into 
		homework (h_no, t_m_id, h_c_no, l_m_id, h_g_no, h_limit ,h_homework)
	values
		(#{h_no}, #{t_m_id}, #{h_c_no}, #{l_m_id}, #{h_g_no}, #{h_limit} ,#{h_homework})
</insert>	
	
<!-- 학습자 숙제 리스트 -->
<select id="homeworkList" resultType="com.alpha.vo.LearnerVO">
	SELECT *
	FROM 
	    homework h
	LEFT JOIN content c ON (h.h_c_no = c.c_no)
	LEFT JOIN learner l ON (h.l_m_id = l.l_m_id AND h.t_m_id = l.t_m_id)
	LEFT JOIN member m ON (h.t_m_id = m.m_id)
	WHERE 
	    l.l_m_id = #{m_id}
	group by h_no    
</select>

<!-- 학습자 숙제 제출 -->
<update id="subitHomework">	
	UPDATE homework 
	SET h_content = TRIM(BOTH ' ' FROM #{h_content}),
	    h_regidate = NOW()
	WHERE h_no = #{h_no}
</update>

<!-- 제출된 숙제 리스트 (학습지도자)-->
<select id="submittedList" resultType="com.alpha.vo.LearnerVO">
	select 
		h_no,
	    t_m_id,
	    l_m_id,
		m_name,
	    h_limit,
	    h_regidate,
	    c_name,
	    h_content,
	    h_homework
	from 
		homework
	left join member on (l_m_id = m_id)
	left join content on (h_c_no = c_no)
	where 
		h_g_no = #{h_g_no} 
	and 
		t_m_id = #{m_id} 
	and 
		h_regidate is not null
</select>	
<!-- 학습지도자 숙제 평가 저장 -->	
</mapper>